name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]
        

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.npm
          ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

  build:
    needs: install

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.npm
          ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm run build
    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: .next/

  lint:
    needs: install

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.npm
          ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm run lint

  production-install:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.npm
          ./node_modules
        key: ${{ runner.os }}-production-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-production-
    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --production

  dockerbuild:
    needs: [build, production-install]

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: my-artifact
    - uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.npm
          ./node_modules
        key: ${{ runner.os }}-production-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-production-
    - name: Docker build
      run: docker build .
